{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MEKALA SAI NIVED\\\\Downloads\\\\betterfund-crowdfunding-in-blockchain-main\\\\pages\\\\campaign\\\\new.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { useAsync } from \"react-use\";\nimport { useRouter } from \"next/router\";\nimport { useWallet } from \"use-wallet\";\nimport { useForm } from \"react-hook-form\";\nimport { Flex, Box, FormControl, FormLabel, Input, Stack, Button, Heading, Text, useColorModeValue, InputRightAddon, InputGroup, Alert, AlertIcon, AlertDescription, FormHelperText, Textarea } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { getETHPrice, getETHPriceInUSD } from \"../../lib/getETHPrice\";\nimport factory from \"../../smart-contract/factory\";\nimport web3 from \"../../smart-contract/web3\";\nexport default function NewCampaign() {\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      isSubmitting,\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const router = useRouter();\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const wallet = useWallet();\n  const {\n    0: minContriInUSD,\n    1: setMinContriInUSD\n  } = useState();\n  const {\n    0: targetInUSD,\n    1: setTargetInUSD\n  } = useState();\n  const {\n    0: ETHPrice,\n    1: setETHPrice\n  } = useState(0);\n  useAsync(async () => {\n    try {\n      const result = await getETHPrice();\n      setETHPrice(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  async function onSubmit(data) {\n    console.log(data.minimumContribution, data.campaignName, data.description, data.imageUrl, data.target);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods.createCampaign(web3.utils.toWei(data.minimumContribution, \"ether\"), data.campaignName, data.description, data.imageUrl, web3.utils.toWei(data.target, \"ether\")).send({\n        from: accounts[0]\n      });\n      router.push(\"/\");\n    } catch (err) {\n      setError(err.message);\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"New Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Create New Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/logo.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 8,\n        mx: \"auto\",\n        maxW: \"2xl\",\n        py: 12,\n        px: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"teal.400\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            mr: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n            href: \"/\",\n            children: \" Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"4xl\",\n            children: \"Create a New Campaign \\uD83D\\uDCE2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          rounded: \"lg\",\n          bg: useColorModeValue(\"white\", \"gray.700\"),\n          boxShadow: \"lg\",\n          p: 8,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"minimumContribution\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Minimum Contribution Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({\n                    type: \"number\",\n                    step: \"any\"\n                  }, register(\"minimumContribution\", {\n                    required: true\n                  })), {}, {\n                    isDisabled: isSubmitting,\n                    onChange: e => {\n                      setMinContriInUSD(Math.abs(e.target.value));\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(InputRightAddon, {\n                    children: \"ETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), minContriInUSD ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  children: [\"~$ \", getETHPriceInUSD(ETHPrice, minContriInUSD)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"campaignName\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Campaign Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, register(\"campaignName\", {\n                  required: true\n                })), {}, {\n                  isDisabled: isSubmitting\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Campaign Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Textarea, _objectSpread(_objectSpread({}, register(\"description\", {\n                  required: true\n                })), {}, {\n                  isDisabled: isSubmitting\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"imageUrl\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Image URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, register(\"imageUrl\", {\n                  required: true\n                })), {}, {\n                  isDisabled: isSubmitting,\n                  type: \"url\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"target\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Target Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({\n                    type: \"number\",\n                    step: \"any\"\n                  }, register(\"target\", {\n                    required: true\n                  })), {}, {\n                    isDisabled: isSubmitting,\n                    onChange: e => {\n                      setTargetInUSD(Math.abs(e.target.value));\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputRightAddon, {\n                    children: \"ETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), targetInUSD ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  children: [\"~$ \", getETHPriceInUSD(ETHPrice, targetInUSD)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), error ? /*#__PURE__*/_jsxDEV(Alert, {\n                status: \"error\",\n                children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                  mr: 2,\n                  children: [\" \", error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this) : null, errors.minimumContribution || errors.name || errors.description || errors.imageUrl || errors.target ? /*#__PURE__*/_jsxDEV(Alert, {\n                status: \"error\",\n                children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                  mr: 2,\n                  children: [\" \", \"All Fields are Required\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 10,\n                children: wallet.status === \"connected\" ? /*#__PURE__*/_jsxDEV(Button, {\n                  bg: \"teal.400\",\n                  color: \"white\",\n                  _hover: {\n                    bg: \"teal.500\"\n                  },\n                  isLoading: isSubmitting,\n                  type: \"submit\",\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"white\",\n                    bg: \"teal.400\",\n                    _hover: {\n                      bg: \"teal.300\"\n                    },\n                    onClick: () => wallet.connect(),\n                    children: [\"Connect Wallet\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                    status: \"warning\",\n                    children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                      mr: 2,\n                      children: \"Please Connect Your Wallet First to Create a Campaign\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/MEKALA SAI NIVED/Downloads/betterfund-crowdfunding-in-blockchain-main/pages/campaign/new.js"],"names":["React","useState","Head","useAsync","useRouter","useWallet","useForm","Flex","Box","FormControl","FormLabel","Input","Stack","Button","Heading","Text","useColorModeValue","InputRightAddon","InputGroup","Alert","AlertIcon","AlertDescription","FormHelperText","Textarea","NextLink","ArrowBackIcon","getETHPrice","getETHPriceInUSD","factory","web3","NewCampaign","handleSubmit","register","formState","isSubmitting","errors","mode","router","error","setError","wallet","minContriInUSD","setMinContriInUSD","targetInUSD","setTargetInUSD","ETHPrice","setETHPrice","result","console","log","onSubmit","data","minimumContribution","campaignName","description","imageUrl","target","accounts","eth","getAccounts","methods","createCampaign","utils","toWei","send","from","push","err","message","required","e","Math","abs","value","name","status","bg","connect"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { useAsync } from \"react-use\";\nimport { useRouter } from \"next/router\";\nimport { useWallet } from \"use-wallet\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n  InputRightAddon,\n  InputGroup,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  FormHelperText,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { getETHPrice, getETHPriceInUSD } from \"../../lib/getETHPrice\";\n\nimport factory from \"../../smart-contract/factory\";\nimport web3 from \"../../smart-contract/web3\";\n\nexport default function NewCampaign() {\n  const {\n    handleSubmit,\n    register,\n    formState: { isSubmitting, errors },\n  } = useForm({\n    mode: \"onChange\",\n  });\n  const router = useRouter();\n  const [error, setError] = useState(\"\");\n  const wallet = useWallet();\n  const [minContriInUSD, setMinContriInUSD] = useState();\n  const [targetInUSD, setTargetInUSD] = useState();\n  const [ETHPrice, setETHPrice] = useState(0);\n  useAsync(async () => {\n    try {\n      const result = await getETHPrice();\n      setETHPrice(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  async function onSubmit(data) {\n    console.log(\n      data.minimumContribution,\n      data.campaignName,\n      data.description,\n      data.imageUrl,\n      data.target\n    );\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n        .createCampaign(\n          web3.utils.toWei(data.minimumContribution, \"ether\"),\n          data.campaignName,\n          data.description,\n          data.imageUrl,\n          web3.utils.toWei(data.target, \"ether\")\n        )\n        .send({\n          from: accounts[0],\n        });\n\n      router.push(\"/\");\n    } catch (err) {\n      setError(err.message);\n      console.log(err);\n    }\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>New Campaign</title>\n        <meta name=\"description\" content=\"Create New Campaign\" />\n        <link rel=\"icon\" href=\"/logo.svg\" />\n      </Head>\n      <main>\n        <Stack spacing={8} mx={\"auto\"} maxW={\"2xl\"} py={12} px={6}>\n          <Text fontSize={\"lg\"} color={\"teal.400\"}>\n            <ArrowBackIcon mr={2} />\n            <NextLink href=\"/\"> Back to Home</NextLink>\n          </Text>\n          <Stack>\n            <Heading fontSize={\"4xl\"}>Create a New Campaign 📢</Heading>\n          </Stack>\n          <Box\n            rounded={\"lg\"}\n            bg={useColorModeValue(\"white\", \"gray.700\")}\n            boxShadow={\"lg\"}\n            p={8}\n          >\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={4}>\n                <FormControl id=\"minimumContribution\">\n                  <FormLabel>Minimum Contribution Amount</FormLabel>\n                  <InputGroup>\n                    {\" \"}\n                    <Input\n                      type=\"number\"\n                      step=\"any\"\n                      {...register(\"minimumContribution\", { required: true })}\n                      isDisabled={isSubmitting}\n                      onChange={(e) => {\n                        setMinContriInUSD(Math.abs(e.target.value));\n                      }}\n                    />{\" \"}\n                    <InputRightAddon children=\"ETH\" />\n                  </InputGroup>\n                  {minContriInUSD ? (\n                    <FormHelperText>\n                      ~$ {getETHPriceInUSD(ETHPrice, minContriInUSD)}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n                <FormControl id=\"campaignName\">\n                  <FormLabel>Campaign Name</FormLabel>\n                  <Input\n                    {...register(\"campaignName\", { required: true })}\n                    isDisabled={isSubmitting}\n                  />\n                </FormControl>\n                <FormControl id=\"description\">\n                  <FormLabel>Campaign Description</FormLabel>\n                  <Textarea\n                    {...register(\"description\", { required: true })}\n                    isDisabled={isSubmitting}\n                  />\n                </FormControl>\n                <FormControl id=\"imageUrl\">\n                  <FormLabel>Image URL</FormLabel>\n                  <Input\n                    {...register(\"imageUrl\", { required: true })}\n                    isDisabled={isSubmitting}\n                    type=\"url\"\n                  />\n                </FormControl>\n                <FormControl id=\"target\">\n                  <FormLabel>Target Amount</FormLabel>\n                  <InputGroup>\n                    <Input\n                      type=\"number\"\n                      step=\"any\"\n                      {...register(\"target\", { required: true })}\n                      isDisabled={isSubmitting}\n                      onChange={(e) => {\n                        setTargetInUSD(Math.abs(e.target.value));\n                      }}\n                    />\n                    <InputRightAddon children=\"ETH\" />\n                  </InputGroup>\n                  {targetInUSD ? (\n                    <FormHelperText>\n                      ~$ {getETHPriceInUSD(ETHPrice, targetInUSD)}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n\n                {error ? (\n                  <Alert status=\"error\">\n                    <AlertIcon />\n                    <AlertDescription mr={2}> {error}</AlertDescription>\n                  </Alert>\n                ) : null}\n                {errors.minimumContribution ||\n                errors.name ||\n                errors.description ||\n                errors.imageUrl ||\n                errors.target ? (\n                  <Alert status=\"error\">\n                    <AlertIcon />\n                    <AlertDescription mr={2}>\n                      {\" \"}\n                      All Fields are Required\n                    </AlertDescription>\n                  </Alert>\n                ) : null}\n                <Stack spacing={10}>\n                  {wallet.status === \"connected\" ? (\n                    <Button\n                      bg={\"teal.400\"}\n                      color={\"white\"}\n                      _hover={{\n                        bg: \"teal.500\",\n                      }}\n                      isLoading={isSubmitting}\n                      type=\"submit\"\n                    >\n                      Create\n                    </Button>\n                  ) : (\n                    <Stack spacing={3}>\n                      <Button\n                        color={\"white\"}\n                        bg={\"teal.400\"}\n                        _hover={{\n                          bg: \"teal.300\",\n                        }}\n                        onClick={() => wallet.connect()}\n                      >\n                        Connect Wallet{\" \"}\n                      </Button>\n                      <Alert status=\"warning\">\n                        <AlertIcon />\n                        <AlertDescription mr={2}>\n                          Please Connect Your Wallet First to Create a Campaign\n                        </AlertDescription>\n                      </Alert>\n                    </Stack>\n                  )}\n                </Stack>\n              </Stack>\n            </form>\n          </Box>\n        </Stack>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}